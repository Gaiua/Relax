if(isApp.toBoolean()){
    apply plugin: 'com.android.application'
}else{
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
android {

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]

    defaultConfig {
        applicationId "com.ustory.relax"
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    sourceSets {
        main {
            if (isApp.toBoolean()) {
                manifest.srcFile 'src/release/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/debug/AndroidManifest.xml'
            }
        }
    }

    checkstyle {
        toolVersion '6.1.1'
        showViolations true
    }

    lintOptions {
        abortOnError false
    }
}

assemble.dependsOn 'checkstyle'

task checkstyle(type: Checkstyle) {
    source '../app/src','../relax-business-component/src','../relax-data-componet/src','../relax-basic-commpent/src'
    configFile file("config/checkstyle.xml")
    include '**/*'
    exclude '**/gen/**'
    ignoreFailures true
    reports { // 支持html和xml两种报告形式，可以任选其一(html更具有可读性)
        xml.enabled = true
        html.enabled = true
        xml {
            destination file("$reportsDir/checkstyle/checkstyle.xml")
        }
        html {
            destination file("$reportsDir/checkstyle/checkstyle.html")
        }
    }

    classpath = files()
}


gradle.taskGraph.whenReady {
    tasks.each { task ->
        if (task.name.equals('mockableAndroidJar')) {
            task.enabled = false
        }
    }
}

task findbugs(type: FindBugs,dependsOn:"connectedAndroidTest") {//
    ignoreFailures = true
    effort = "default"
    reportLevel = "medium"
    //这里填写项目classes目录
    classes = files("${project.rootDir}/andbase-core/build/intermediates/classes")
    source = fileTree('src/main/java')
    classpath = files()
    reports {
        //只能开启一个
        xml.enabled = false
        html.enabled = true
    }
}

task jacocoTestReport(type:JacocoReport){//,dependsOn:"connectedAndroidTest"
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports{
        xml.enabled = false
        html.enabled = true
        csv.enabled = false
    }
    classDirectories = fileTree(
            dir : "$buildDir/intermediates/classes/debug",
            excludes : [
                    '**/*Test.class',
                    '**/R.class',
                    '**/R$*.class',
                    '**/BuildConfig.*',
                    '**/Manifest*.*'
            ]
    )
    def coverageSourceDirs = ['src/main/java']
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    additionalClassDirs = files(coverageSourceDirs)
    executionData = files("$buildDir/outputs/code-coverage/connected/coverage.ec")
}

dependencies {
    if(!relaxBusinessComponent_isApp.toBoolean()){
        implementation project(':relax-business-component')
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}

